@model AccountDetailsViewModel
@{
    ViewData["Title"] = $"{Model.ProfileInfo!.FirstName} {Model.ProfileInfo.LastName}";
}

@{
    var user = await UserManager.GetUserAsync(User);
}

<div class="container">
    <section id="account-details">
        <aside>
            <div class="profile-info">
                <div class="image-profile">
                    @if (user != null && !string.IsNullOrEmpty(user.ProfileImage))
                    {
                        <img src="~/Images/@user.ProfileImage" alt="@($"{user.FirstName} {user.LastName}")" />
                    }
                    else
                    {
                        <img src="~/@Model.ProfileInfo.ProfileImage" alt="@($"{Model.ProfileInfo.FirstName} {Model.ProfileInfo.LastName}")" />
                    }
                    <form enctype="multipart/form-data" method="post" asp-action="UploadImage" asp-controller="Account">
                        <input id="fileUploader" type="file" name="file" hidden />
                        <label for="fileUploader" class="btn-circle"><i class="fa-solid fa-arrows-rotate"></i></label>
                    </form>
                </div>
                <h5>@($"{Model.ProfileInfo.FirstName} {Model.ProfileInfo.LastName}")</h5>
                <p>@Model.ProfileInfo.Email</p>
            </div>
            <nav>
                <a class="btn-theme-s" asp-controller="Account" asp-action="Details"><i class="fa-solid fa-gear"></i>Account Details</a>
                <a class="btn-transparent" asp-controller="Account" asp-action="Security"><i class="fa-solid fa-lock"></i>Security</a>
                <a class="btn-transparent" asp-controller="Account" asp-action="SavedCourses"><i class="fa-regular fa-file"></i>Saved Courses</a>
                <a class="btn-transparent" asp-controller="Auth" asp-action="SignOut"><i class="fa-solid fa-right-from-bracket"></i>Sign out</a>
            </nav>
        </aside>

        <div class="details">
            @if (!string.IsNullOrEmpty(ViewData["SuccessMessage"]?.ToString()))
            {
                <div id="form-success" class="alert alert-success" role="alert">
                    @ViewData["SuccessMessage"]
                </div>
            }

            @if (!string.IsNullOrEmpty(ViewData["ErrorMessage"]?.ToString()))
            {
                <div id="form-error" class="alert alert-danger" role="alert">
                    @ViewData["ErrorMessage"]
                </div>
            }
            <section class="basic-info">
                <form method="post" asp-controller="Account" asp-action="Details">
                    <h2>Account Details</h2>
                    <h5>Basic Info</h5>

                    <div class="content">
                        <div id="form-firstname" class="input-group">
                            <label asp-for="BasicInfo!.FirstName"></label>
                            @if (Model.BasicInfo!.IsExternalAccount)
                            {
                                <input asp-for="BasicInfo!.FirstName" readonly />
                            }
                            else
                            {
                                <span asp-validation-for="BasicInfo!.FirstName"></span>
                                <input asp-for="BasicInfo!.FirstName" />
                            }
                        </div>

                        <div id="form-lastname" class="input-group">
                            <label asp-for="BasicInfo!.LastName"></label>
                            @if (Model.BasicInfo!.IsExternalAccount)
                            {
                                <input asp-for="BasicInfo!.LastName" readonly />
                            }
                            else
                            {
                                <span asp-validation-for="BasicInfo!.LastName"></span>
                                <input asp-for="BasicInfo!.LastName" />
                            }
                        </div>

                        <div id="form-email" class="input-group">
                            <label asp-for="BasicInfo!.Email"></label>
                            @if (Model.BasicInfo!.IsExternalAccount)
                            {
                                <input asp-for="BasicInfo!.Email" readonly />
                            }
                            else
                            {
                                <span asp-validation-for="BasicInfo!.Email"></span>
                                <input asp-for="BasicInfo!.Email" />
                            }
                        </div>

                        <div id="form-phone" class="input-group">
                            <label asp-for="BasicInfo!.Phone"></label>
                            <span asp-validation-for="BasicInfo!.Phone"></span>
                            <input asp-for="BasicInfo!.Phone" />
                        </div>

                        <div id="form-bio" class="input-group">
                            <label asp-for=BasicInfo!.Biography>Bio <span>(optional)</span></label>
                            <textarea asp-for="BasicInfo!.Biography" placeholder="Add a short bio..."></textarea>
                        </div>

                        <div id="form-buttons">
                            <button class="btn-gray" type="reset">Cancel</button>
                            <button class="btn-theme" type="submit">Save changes</button>
                        </div>
                    </div>
                </form>
            </section>
            <hr />
            <section class="address-info">
                <form method="post" asp-controller="Account" asp-action="Details">
                    <h5>Address</h5>

                    <div class="content">
                        <div id="form-addressline-1" class="input-group">
                            <label asp-for="AddressInfo!.AddressLine_1">Address line 1</label>
                            <span asp-validation-for="AddressInfo!.AddressLine_1"></span>
                            <input asp-for="AddressInfo!.AddressLine_1" placeholder="@((Model.AddressInfo != null) ? Model.AddressInfo.AddressLine_1 : "Enter your address line")" />
                        </div>

                        <div id="form-addressline-2" class="input-group">
                            <label asp-for="AddressInfo!.AddressLine_2">Address line 2 <span>(optional)</span></label>
                            <span asp-validation-for="AddressInfo!.AddressLine_2"></span>
                            <input asp-for="AddressInfo!.AddressLine_2" placeholder="@((Model.AddressInfo != null) ? Model.AddressInfo.AddressLine_2 : "Enter second address line")" />
                        </div>
                  
                        <div id="form-postalcode" class="input-group">
                            <label asp-for="AddressInfo!.PostalCode"></label>
                            <span asp-validation-for="AddressInfo!.PostalCode"></span>
                            <input asp-for="AddressInfo!.PostalCode" placeholder="@((Model.AddressInfo != null) ? Model.AddressInfo.PostalCode : "Enter your postal code")" />
                        </div>

                        <div id="form-city" class="input-group">
                            <label asp-for="AddressInfo!.City"></label>
                            <span asp-validation-for="AddressInfo!.City"></span>
                            <input asp-for="AddressInfo!.City" placeholder="@((Model.AddressInfo != null) ? Model.AddressInfo.City : "Enter your city")" />
                        </div>

                        <div id="form-buttons">
                            <button class="btn-gray" type="reset">Cancel</button>
                            <button class="btn-theme" type="submit">Save changes</button>
                        </div>
                    </div>
                </form>
            </section>
        </div>
    </section>
</div>


@await Html.PartialAsync("_ValidationScriptPartial")